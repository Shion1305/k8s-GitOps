# Kube-Prometheus Stack Helm Values
# Includes Grafana, Prometheus, and AlertManager

# Global settings
global:
  scrapeInterval: 30s
  evaluationInterval: 30s

# Prometheus configuration
prometheus:
  enabled: true
  prometheusSpec:
    # Retention settings
    retention: 30d
    retentionSize: 15GB
    
    # Storage configuration
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: local-path
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi
    
    # Service discovery settings - discover all ServiceMonitors
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorNamespaceSelector: {}
    serviceMonitorSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    podMonitorNamespaceSelector: {}
    podMonitorSelector: {}
    ruleSelectorNilUsesHelmValues: false
    ruleNamespaceSelector: {}
    ruleSelector: {}
    
    # Resource configuration
    resources:
      limits:
        cpu: 2000m
        memory: 8Gi
      requests:
        cpu: 1000m
        memory: 4Gi

# Grafana configuration
grafana:
  enabled: true
  
  # Service configuration
  service:
    type: NodePort
    nodePort: 30080
  
  # Persistence
  persistence:
    enabled: true
    type: pvc
    storageClassName: local-path
    size: 10Gi
    accessModes:
      - ReadWriteOnce
  
  # Default dashboards
  defaultDashboardsEnabled: true
  defaultDashboardsTimezone: UTC
  
  # Datasources configuration - use default from chart
  # (chart automatically configures Prometheus datasource)
  
  # Dashboard providers
  dashboardProviders:
    dashboardProviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
        - name: 'node-exporter'
          orgId: 1
          folder: 'Node Metrics'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/node-exporter
  
  # Pre-configured dashboards
  dashboards:
    default:
      kubernetes-cluster-monitoring:
        gnetId: 7249
        revision: 1
        datasource: Prometheus
      kubernetes-node-exporter:
        gnetId: 1860
        revision: 37
        datasource: Prometheus
    node-exporter:
      node-exporter-full:
        gnetId: 1860
        revision: 37
        datasource: Prometheus
      node-exporter-server-metrics:
        gnetId: 405
        revision: 8
        datasource: Prometheus
  
  # Environment variables to load GitHub OAuth credentials from secret
  envFromSecrets:
    - name: grafana-github-oauth-secret
  
  # Disable security validation for sensitive keys (required for OAuth secrets)
  assertNoLeakedSecrets: false
  
  # Grafana configuration
  grafana.ini:
    server:
      root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
      serve_from_sub_path: true
    
    # Disable anonymous authentication
    auth.anonymous:
      enabled: false
    
    # Disable basic authentication (password login)
    auth.basic:
      enabled: false
    
    # Disable local login form and enable auto-login
    auth:
      disable_login_form: true
      disable_signout_menu: false
      oauth_auto_login: true
    
    # GitHub OAuth configuration
    auth.github:
      enabled: true
      allow_sign_up: true
      client_id: ${dex.github.clientID}
      client_secret: ${dex.github.clientSecret}
      scopes: user:email,read:org
      auth_url: https://github.com/login/oauth/authorize
      token_url: https://github.com/login/oauth/access_token
      api_url: https://api.github.com/user
      allowed_organizations: # Add your GitHub organizations here if needed
      team_ids: # Add specific team IDs if needed
      allow_assign_grafana_admin: false
      role_attribute_path: # Optional: map GitHub teams to Grafana roles
    
    security:
      admin_user: admin
      # Note: admin password is disabled since we're using OAuth only
    
    dashboards:
      default_home_dashboard_path: /var/lib/grafana/dashboards/default/kubernetes-cluster-monitoring.json
  
  # Resource configuration
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

# AlertManager configuration
alertmanager:
  enabled: true
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: local-path
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 128Mi

# Node Exporter (disabled since we're deploying it separately)
nodeExporter:
  enabled: false

# Kube State Metrics
kubeStateMetrics:
  enabled: true

# Prometheus Node Exporter Service Monitor
prometheusNodeExporter:
  enabled: false  # We'll use our separate deployment

# Service Monitors
prometheus-node-exporter:
  enabled: true
