# Keycloak admin credentials secret - SECURE VERSION
# This secret should be created externally and NOT stored in Git
# Use external-secrets operator or manual kubectl commands
# Example: kubectl create secret generic keycloak-admin-credentials -n keycloak \
#   --from-literal=admin-username=admin \
#   --from-literal=admin-password="$(openssl rand -base64 32)"
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-admin-credentials
  namespace: keycloak
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-weight: "-30"
    argocd.argoproj.io/sync-wave: "-3"
    # Skip this resource - create externally
    argocd.argoproj.io/sync-options: Skip
type: Opaque
data:
  # Placeholder - actual secret created externally
  admin-username: YWRtaW4=
  admin-password: cGxhY2Vob2xkZXI=

---
# PostgreSQL credentials secret placeholder
# This will be populated by the postgres-secret-replicator job
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-postgres-credentials
  namespace: keycloak
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-weight: "-20"
    argocd.argoproj.io/sync-wave: "-2"
type: Opaque
stringData:
  postgres-password: placeholder
  postgres-username: postgres

---
# GitHub Actions exchanger client credentials - SECURE VERSION
# This secret is created manually after the bootstrap job completes
# Contains the client ID and secret for GitHub Actions OIDC token exchange
#
# SECURITY NOTE: Secrets are NOT stored in Git for security
# Create manually using:
# kubectl create secret generic gha-exchanger-credentials -n keycloak \
#   --from-literal=client-id=gha-exchanger \
#   --from-literal=client-secret="$(openssl rand -base64 32)"
#
# The bootstrap job will generate a new client secret automatically

---
# GitHub OAuth App credentials for user login
# Create a GitHub OAuth App at: https://github.com/settings/applications/new
# Set Authorization callback URL to: https://keycloak.k.shion1305.com/realms/registry/broker/github/endpoint
#
# SECURITY NOTE: Secrets are NOT stored in Git for security
# Create manually using:
# kubectl create secret generic github-oauth-credentials -n keycloak \
#   --from-literal=client-id=<your-github-oauth-app-client-id> \
#   --from-literal=client-secret=<your-github-oauth-app-client-secret>
apiVersion: v1
kind: Secret
metadata:
  name: github-oauth-credentials
  namespace: keycloak
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-weight: "-20"
    argocd.argoproj.io/sync-wave: "-2"
    # Skip this resource - create externally
    argocd.argoproj.io/sync-options: Skip
type: Opaque
data:
  # Placeholder - actual secret created externally
  client-id: cGxhY2Vob2xkZXI=
  client-secret: cGxhY2Vob2xkZXI=
