apiVersion: batch/v1
kind: Job
metadata:
  name: timemachine-credential-generator
  namespace: macos-timemachine
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: credential-generator
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          # Generate random password (32 characters, alphanumeric + special chars)
          PASSWORD=$(cat /dev/urandom | tr -dc 'A-Za-z0-9!@#$%^&*()_+-=' | head -c 32)
          USERNAME="timemachine"
          
          echo "Generating TimeMachine credentials..."
          echo "Username: $USERNAME"
          echo "Password: $PASSWORD"
          
          # Create secret with credentials
          kubectl create secret generic timemachine-credentials \
            --from-literal=username="$USERNAME" \
            --from-literal=password="$PASSWORD" \
            --dry-run=client -o yaml | kubectl apply -f -
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ Credentials secret created successfully!"
          else
            echo "‚ùå Failed to create credentials secret"
            exit 1
          fi
          
          # Get node IP for connection info
          NODE_IP=$(kubectl get nodes -l kubernetes.io/hostname=shion-ubuntu-2505 -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}' 2>/dev/null || echo "<NODE_IP>")
          
          # Also create a readable secret for easy access
          kubectl create secret generic timemachine-credentials-readable \
            --from-literal=connection-info="smb://timemachine:$PASSWORD@$NODE_IP:30445/TimeMachine" \
            --from-literal=smb-url="smb://$NODE_IP:30445" \
            --from-literal=username="$USERNAME" \
            --from-literal=password="$PASSWORD" \
            --from-literal=node-ip="$NODE_IP" \
            --dry-run=client -o yaml | kubectl apply -f -
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ Connection info secret created successfully!"
            echo "üìã Connection Details:"
            echo "   SMB URL: smb://$NODE_IP:30445"
            echo "   Username: $USERNAME"
            echo "   Password: $PASSWORD"
            echo "   Full URL: smb://timemachine:$PASSWORD@$NODE_IP:30445/TimeMachine"
          else
            echo "‚ö†Ô∏è Warning: Failed to create connection info secret"
          fi
      serviceAccountName: timemachine-credential-generator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: timemachine-credential-generator
  namespace: macos-timemachine
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: macos-timemachine
  name: secret-manager
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "get", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: timemachine-node-reader
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: timemachine-credential-generator
  namespace: macos-timemachine
subjects:
- kind: ServiceAccount
  name: timemachine-credential-generator
  namespace: macos-timemachine
roleRef:
  kind: Role
  name: secret-manager
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: timemachine-node-reader
subjects:
- kind: ServiceAccount
  name: timemachine-credential-generator
  namespace: macos-timemachine
roleRef:
  kind: ClusterRole
  name: timemachine-node-reader
  apiGroup: rbac.authorization.k8s.io
