apiVersion: apps/v1
kind: Deployment
metadata:
  name: network-stress-test
  namespace: network-stress-test
  labels:
    app: network-stress-test
spec:
  replicas: 3
  selector:
    matchLabels:
      app: network-stress-test
  template:
    metadata:
      labels:
        app: network-stress-test
    spec:
      containers:
        - name: stress-server
          image: nginx:alpine
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: stress-test-config
          command: ["/bin/sh"]
          args:
            - -c
            - "# Create a simple HTTP server that streams large data\ncat > /tmp/server.sh << 'EOF'\n#!/bin/sh\n\n# Create large data files of different sizes\nmkdir -p /tmp/data\n\n# Generate test data files\necho \"Generating test data files...\"\ndd if=/dev/zero of=/tmp/data/1mb.dat bs=1M count=1 2>/dev/null\ndd if=/dev/zero of=/tmp/data/10mb.dat bs=1M count=10 2>/dev/null\ndd if=/dev/zero of=/tmp/data/100mb.dat bs=1M count=100 2>/dev/null\ndd if=/dev/zero of=/tmp/data/1gb.dat bs=1M count=1024 2>/dev/null\n\n# Create nginx config for streaming\ncat > /etc/nginx/nginx.conf << 'NGINX_EOF'\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    sendfile on;\n    tcp_nopush on;\n    tcp_nodelay on;\n    keepalive_timeout 65;\n    \n    server {\n        listen 8080;\n        server_name localhost;\n        root /tmp/data;\n\n        # Health check endpoint\n        location /health {\n            access_log off;\n            return 200 \"healthy\\n\";\n            add_header Content-Type text/plain;\n        }\n        \n        # Metrics endpoint\n        location /metrics {\n            access_log off;\n            return 200 \"# Network stress test metrics\\nstress_test_active 1\\n\";\n            add_header Content-Type text/plain;\n        }\n        \n        # Stream endpoints for different sizes\n        location /stream/1mb {\n            try_files /1mb.dat =404;\n        }\n        \n        location /stream/10mb {\n            try_files /10mb.dat =404;\n        }\n        \n        location /stream/100mb {\n            try_files /100mb.dat =404;\n        }\n        \n        location /stream/1gb {\n            try_files /1gb.dat =404;\n        }\n        \n        # Root endpoint with usage instructions\n        location / {\n            return 200 \"Network Stress Test Server\\n\\nAvailable endpoints:\\n/health - Health check\\n/metrics - Metrics\\n/stream/1mb - Stream 1MB\\n/stream/10mb - Stream 10MB\\n/stream/100mb - Stream 100MB\\n/stream/1gb - Stream 1GB\\n\\nUsage: curl -o /dev/null http://service-ip:8080/stream/100mb\\n\";\n            add_header Content-Type text/plain;\n        }\n    }\n}\nNGINX_EOF\n\necho \"Starting nginx...\"\nnginx -g \"daemon off;\"\nEOF\n\nchmod +x /tmp/server.sh\n/tmp/server.sh\n"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
